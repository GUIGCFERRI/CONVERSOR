 SELECT
  MAX (ESTOQUE_VINCULO.CODIGO_BARRA) AS BARRAS,
  ESTOQUE.CODIGO_PRODUTO AS PERSONAL1,
--  ESTOQUE.CODIGO_PRODUTO AS CODIGO,
  ESTOQUE.CODIGO_FABRICANTE AS COD_FABRICANTE,
  CASE ESTOQUE.CARREGA_BALANCA WHEN 'T' THEN ESTOQUE.CODIGO_PRODUTO END AS PERSONAL4, -- Se for produto de balanca, depois deve executaros comandos a parte para ajuste 
  ESTOQUE.DESCRICAO_PRODUTO AS DESCRICAO,
  ESTOQUE.REFERENCIA_PRODUTO AS PERSONAL2,
  FORNECEDORES.NOME_FORNECEDOR AS FORNECEDOR,
  GRUPOS.DESCRICAO_GRUPO AS GRUPO,
  ESTOQUE.UNIDADE AS UND,
  ESTOQUE_SALDO.SALDO AS QTD,
  substring (ESTOQUE.CST FROM 1 FOR 1) AS OST,
  substring (ESTOQUE.CST FROM 2 FOR 3) AS ST,
  --ESTOQUE.CST AS ST,
  ESTOQUE.PRECO_CUSTO AS PRECO_CUSTO,
  ESTOQUE.CUSTO_MEDIO AS CUSTO_MEDIO,
  ESTOQUE.PRECO_VENDA AS PRECO_VENDA,
  ESTOQUE.PRECO_FORNECEDOR AS PRECO_ATACADO,
  ESTOQUE.LUCRO_MAXIMO AS MARGEM_LUCRO,
  ESTOQUE.ULT_ENTRADA_DATA AS ULTIMA_COMPRA,
  ESTOQUE.ULT_SAIDA_DATA AS ULTIMA_VENDA,
  ESTOQUE.DATA_ULTIMO_REAJUSTE AS ALTERACAO_PRECO,
  ESTOQUE.MARCA_PRODUTO ||''|| ESTOQUE.OBSERVACOES AS OBSERVACOES,
  ESTOQUE.MARCA_PRODUTO AS CARACTERISTICAS,
  ESTOQUE.NCM AS COD_NCM,
  ESTOQUE.CEST AS PERSONAL6,
  ESTOQUE.DATA_CADASTRO AS DATA_CADASTRO,
  ESTOQUE.PIS_ST_SAIDA AS PIS_CODIGO,
  ESTOQUE.PIS_ALIQ_SAIDA AS PIS_ALIQ_NOR,
  ESTOQUE.COFINS_ST_SAIDA AS COFINS_CODIGO,
  ESTOQUE.COFINS_ALIQ_SAIDA AS COFINS_ALIQ_NOR,
  ESTOQUE.PIS_ST_ENTRADA AS PISE_CODIGO,
  ESTOQUE.PIS_ALIQ_ENTRADA AS PISE_ALIQ_NOR,
  ESTOQUE.COFINS_ST_ENTRADA AS COFINSE_CODIGO,
  ESTOQUE.COFINS_ALIQ_ENTRADA AS COFINSE_ALIQ_NOR,
  case when estoque.ativo = 'T' then 'Ativo' else 'Inativo' end as SITUACAO
FROM ESTOQUE
LEFT JOIN FORNECEDORES ON FORNECEDORES.CODIGO_FORNECEDOR = ESTOQUE.FORNECEDOR
LEFT JOIN GRUPOS ON GRUPOS.CODIGO_GRUPO = ESTOQUE.GRUPO
LEFT JOIN ESTOQUE_SALDO ON ESTOQUE_SALDO.CODIGO_PRODUTO = ESTOQUE.CODIGO_PRODUTO
LEFT JOIN ESTOQUE_VINCULO ON ESTOQUE_VINCULO.codigo_produto = ESTOQUE.CODIGO_PRODUTO
WHERE ESTOQUE.CODIGO_PRODUTO <> '9999999999999' AND ESTOQUE.CODIGO_PRODUTO > '0' --and estoque.ativo <> 'F'
GROUP BY 2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24 ,25,26,27,28,29,30,31,32,33,34
