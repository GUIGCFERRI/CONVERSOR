>>> ATENÇÃO, base com códigos fora de padrão, em alguns casos dá para aproveitar, outros não. Usar script abaixo se necessário (firebird 2.5):
update estoque e set e.descricao = (e.personal1)||'-'||(left(e.descricao,80));

>>> Comandos para ajuste do barras (padronize o barras conforme necessário):
update estoque e set e.barras = e.personal4 where e.personal4 <> '';

update estoque set barras = '2' || barras where UND = 'KG' and barras like '______';
update estoque set barras = '20' || barras where UND = 'KG' and barras like '_____';
update estoque set barras = '200' || barras where UND = 'KG' and barras like '____';
update estoque set barras = '2000' || barras where UND = 'KG' and barras like '___';
update estoque set barras = '20000' || barras where UND = 'KG' and barras like '__';
update estoque set barras = '200000' || barras where UND = 'KG' and barras like '_';

 

SELECT
  ESTOQUE.CODIGO_PRODUTO AS CODIGO,
  ESTOQUE.CODIGO_FABRICANTE AS COD_FABRICANTE,
  MAX (ESTOQUE_VINCULO.CODIGO_BARRA) AS BARRAS,
  ESTOQUE.DESCRICAO_PRODUTO AS DESCRICAO,
  ESTOQUE.REFERENCIA_PRODUTO AS CARACTERISTICAS,
  FORNECEDORES.NOME_FORNECEDOR AS FORNECEDOR,
  GRUPOS.DESCRICAO_GRUPO AS GRUPO,
  ESTOQUE.UNIDADE AS UND,
  ESTOQUE_SALDO.SALDO AS QTD,
  substring (ESTOQUE.CST FROM 1 FOR 1) AS OST,
  substring (ESTOQUE.CST FROM 2 FOR 3) AS ST,
  --ESTOQUE.CST AS ST,
  ESTOQUE.PRECO_CUSTO AS PRECO_CUSTO,
  ESTOQUE.CUSTO_MEDIO AS CUSTO_MEDIO,
  ESTOQUE.PRECO_VENDA AS PRECO_VENDA,
  ESTOQUE.PRECO_FORNECEDOR AS PRECO_ATACADO,
  ESTOQUE.LUCRO_MAXIMO AS MARGEM_LUCRO,
  ESTOQUE.ULT_ENTRADA_DATA AS ULTIMA_COMPRA,
  ESTOQUE.ULT_SAIDA_DATA AS ULTIMA_VENDA,
  ESTOQUE.DATA_ULTIMO_REAJUSTE AS ALTERACAO_PRECO,
  ESTOQUE.MARCA_PRODUTO ||''|| ESTOQUE.OBSERVACOES AS OBSERVACOES,
  ESTOQUE.MARCA_PRODUTO AS PERSONAL1,
  ESTOQUE.NCM AS COD_NCM,
  ESTOQUE.CEST AS PERSONAL6,
  ESTOQUE.DATA_CADASTRO AS DATA_CADASTRO
FROM ESTOQUE
LEFT JOIN FORNECEDORES ON FORNECEDORES.CODIGO_FORNECEDOR = ESTOQUE.FORNECEDOR
LEFT JOIN GRUPOS ON GRUPOS.CODIGO_GRUPO = ESTOQUE.GRUPO
LEFT JOIN ESTOQUE_SALDO ON ESTOQUE_SALDO.CODIGO_PRODUTO = ESTOQUE.CODIGO_PRODUTO
LEFT JOIN ESTOQUE_VINCULO ON ESTOQUE_VINCULO.codigo_produto = ESTOQUE.CODIGO_PRODUTO
WHERE ESTOQUE.CODIGO_PRODUTO <> '9999999999999' AND ESTOQUE.CODIGO_PRODUTO > '0'
GROUP BY 1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
